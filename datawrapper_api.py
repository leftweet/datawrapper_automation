# -*- coding: utf-8 -*-
"""datawrapper_api.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_aAZu3DXibRIQjxqCxdKHQ3LVA-E6Jxl
"""

import requests
import json
import os
import csv
from google.colab import userdata

API_TOKEN = userdata.get('DATAWRAPPER_API_TOKEN')  # Set in Colab secrets

BASE_URL = 'https://api.datawrapper.de/v3'
HEADERS_JSON = {
    'Authorization': f'Bearer {API_TOKEN}',
    'Content-Type': 'application/json'
}
HEADERS_CSV = {
    'Authorization': f'Bearer {API_TOKEN}',
    'Content-Type': 'text/csv'
}

# Step 1: Read column headers from csv.csv
csv_filename = "csv.csv"
if not os.path.exists(csv_filename):
    raise FileNotFoundError(f"CSV file '{csv_filename}' not found.")

with open(csv_filename, newline='', encoding='utf-8') as f:
    reader = csv.reader(f, delimiter=',')  # CSV uses comma delimiter
    headers = next(reader)

if len(headers) < 3:
    raise ValueError("CSV must have at least 3 columns")

x_axis_col = headers[0]
team_a_col = headers[1]
team_b_col = headers[2]

# Step 2: Create the chart
chart_config = {
    "title": f"{team_a_col} vs. {team_b_col} Game Flow",
    "type": "d3-lines"
}

response = requests.post(f"{BASE_URL}/charts", headers=HEADERS_JSON, data=json.dumps(chart_config))
response.raise_for_status()
chart_id = response.json()['id']
print(f"Chart created with ID: {chart_id}")

# Step 3: Upload CSV data
with open(csv_filename, 'r', encoding='utf-8') as file:
    csv_data = file.read()

upload_url = f"{BASE_URL}/charts/{chart_id}/data"
upload_response = requests.put(upload_url, headers=HEADERS_CSV, data=csv_data.encode('utf-8'))
upload_response.raise_for_status()
print("CSV data uploaded.")

# Step 4: Construct dynamic metadata
metadata_url = f"{BASE_URL}/charts/{chart_id}"
metadata_patch = {
    "metadata": {
        "describe": {
            "source-name": "Basketball Reference",
            "source-url": "",
            "intro": "",
            "byline": "",
            "aria-description": "",
            "number-format": "-",
            "number-divisor": 0,
            "number-append": "",
            "number-prepend": ""
        },
        "visualize": {
            "dark-mode-invert": True,
            "lines": {
                team_a_col: {
                    "symbols": {
                        "on": "last",
                        "style": "hollow",
                        "enabled": True
                    },
                    "valueLabels": {
                        "first": False,
                        "enabled": True
                    }
                },
                team_b_col: {
                    "symbols": {
                        "on": "last",
                        "style": "hollow",
                        "enabled": True
                    },
                    "valueLabels": {
                        "first": False,
                        "enabled": True
                    }
                }
            },
            "highlighted-series": [],
            "highlighted-values": [],
            "sharing": {
                "enabled": False,
                "url": "",
                "auto": False
            },
            "shape": "fixed",
            "size": "fixed",
            "x-pos": "off",
            "y-pos": "left",
            "x-axis": {"log": False, "range": ["", ""], "ticks": []},
            "x-grid": "off",
            "y-axis": {"log": False, "range": ["", ""], "ticks": []},
            "y-grid": "on",
            "compare": {"enabled": False, "differenceLabel": True},
            "opacity": 1,
            "scale-y": "linear",
            "sort-by": "first",
            "tooltip": {"body": "", "title": "", "sticky": False, "enabled": True},
            "category": "direct",
            "max-size": 10,
            "outlines": False,
            "overlays": [],
            "x-format": "auto",
            "y-format": "auto",
            "color-key": True,
            "base-color": "#2e2e2e",
            "fixed-size": 5,
            "grid-lines": "show",
            "regression": False,
            "sort-areas": "keep",
            "auto-labels": True,
            "bar-padding": 60,
            "label-space": 30,
            "sort-values": False,
            "stack-areas": True,
            "valueLabels": {
                "show": "hover",
                "enabled": True,
                "placement": "outside"
            },
            "yAxisLabels": {
                "enabled": True,
                "alignment": "left",
                "placement": "outside"
            },
            "area-opacity": 0.5,
            "custom-area-fills": [
                {
                    "id": "0Av44dodX1",
                    "to": team_b_col,
                    "from": team_a_col,
                    "color": "#cccccc",
                    "opacity": 0.3,
                    "colorNegative": "#E31A1C",
                    "interpolation": "linear",
                    "useMixedColors": False
                }
            ],
            "connector-lines": True,
            "interpolation": "monotone-x",
            "hover-highlight": True,
            "plotHeightFixed": 350,
            "show-color-key": False
        }
    }
}

patch_response = requests.patch(metadata_url, headers=HEADERS_JSON, data=json.dumps(metadata_patch))
patch_response.raise_for_status()
print("Metadata patched.")

# Step 5: Publish chart
publish_url = f"{BASE_URL}/charts/{chart_id}/publish"
publish_response = requests.post(publish_url, headers={'Authorization': f'Bearer {API_TOKEN}'})
publish_response.raise_for_status()
print("Chart published.")

# Step 6: Output chart URL
print(f"View chart at: https://www.datawrapper.de/_/{chart_id}")
